package patreon

// Address represents a patron's shipping address.
type Address struct {
	*AddressAttributes
	ID string
	// The user this address belongs to.
	User *User
	// The campaigns that have access to the address.
	Campaigns []*Campaign
}

// Benefit represents a benefit added to the campaign, which can be added to a tier to be delivered to the patron.
type Benefit struct {
	*BenefitAttributes
	ID string
	// The Tiers the benefit has been added to.
	Tiers []*Tier
	// The Deliverables that have been generated by the Benefit
	Deliverables []*Deliverables
	// The Campaign the benefit belongs to
	Campaign *Campaign
}

// Campaign represents the creator's page, and the top-level object for accessing lists of members, tiers, etc.
type Campaign struct {
	*CampaignAttributes
	ID string
	// The campaign's tiers.
	Tiers []*Tier
	// The campaign owner.
	Creator *User
	// The campaign's benefits.
	Benefits []*Benefit
	// The campaign's goals.
	Goals []*Goal
}

// Deliverables represents the record of whether or not a patron has been delivered the benefitthey are owed
// because of their member tier.
type Deliverables struct {
	*DeliverableAttributes
	ID string
	// The Campaign the Deliverables were generated for.
	Campaign *Campaign
	// The Benefit the Deliverables were generated for.
	Benefit *Benefit
	// The member who has been granted the deliverable.
	Member *Member
	// The user who has been granted the deliverable. This user is the same as the member user.
	User *User
}

// Goal represents a funding goal in USD set by a creator on a campaign.
type Goal struct {
	*GoalAttributes
	ID string
	// The campaign trying to reach the goal
	Campaign *Campaign
}

// Media represents a file uploaded to patreon.com, usually an image.
type Media struct {
	*MediaAttributes
	ID string
}

// Member represents the record of a user's membership to a campaign. Remains consistent across months of pledging.
type Member struct {
	*MemberAttributes
	ID string
	// The member's shipping address that they entered for the campaign.Requires the campaign.members.address scope.
	Address *Address
	// The campaign that the membership is for.
	Campaign *Campaign
	// The tiers that the member is entitled to. This includes a current pledge,
	// or payment that covers the current payment period.
	CurrentlyEntitledTiers []*Tier
	// The user who is pledging to the campaign.
	User *User
}

// OAuthClient represents a client created by a developer, used for getting OAuth2 access tokens.
type OAuthClient struct {
	*OAuthClientAttributes
	// The user who created the OAuth Client.
	User *User
	// The campaign of the user who created the OAuth Client.
	Campaign *Campaign
	// The token of the user who created the client.
	CreatorToken string
}

// Tier represents a membership level on a campaign, which can have benefits attached to it.
type Tier struct {
	*TierAttributes
	ID string
	// The campaign the tier belongs to.
	Campaign *Campaign
	// The image file associated with the tier.
	TierImage *Media
	// The benefits attached to the tier, which are used for generating deliverables
	Benefits []*Benefit
}

// User represents the Patreon user, which can be both patron and creator.
type User struct {
	*UserAttributes
	ID string
	// Usually a zero or one-element array with the user's membership to the token creator's campaign,
	// if they are a member. With the identity.memberships scope, this returns memberships to ALL campaigns the user is
	// a member of.
	Memberships []*Member
	Campaign    *Campaign
}

// Webhook represents an event happening on a particular campaign.
type Webhook struct {
	WebhookAttributes
	// The client which created the webhook
	Client *OAuthClient
	// The campaign whose events trigger the webhook.
	Campaign *Campaign
}
